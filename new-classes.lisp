(in-package #:eshop)


(defclass product ()
  ((articul           :initarg :articul         :initform nil                          :accessor articul)
   (parent            :initarg :parent          :initform nil                          :accessor parent)
   (key               :initarg :key             :initform ""                           :accessor key)
   (name              :initarg :name            :initform ""                           :accessor name)
   (realname          :initarg :realname        :initform ""                           :accessor realname)
   (price             :initarg :price           :initform 0                            :accessor price)
   (siteprice         :initarg :siteprice       :initform 0                            :accessor siteprice)
   (bonuscount        :initarg :bonuscount      :initform 0                            :accessor bonuscount)
   (date-modified     :initarg :date-modified   :initform (get-universal-time)         :accessor date-modified)
   (date-created       :initarg :date-created     :initform (get-universal-time)         :accessor date-created)
   (active            :initarg :active          :initform t                            :accessor active)
   (predzakaz         :initarg :predzakaz       :initform nil                          :accessor predzakaz)
   (newbie            :initarg :newbie          :initform t                            :accessor newbie)
   (sale              :initarg :sale            :initform t                            :accessor sale)
   (descr             :initarg :descr           :initform ""                           :accessor descr)
   (shortdescr        :initarg :shortdescr      :initform ""                           :accessor shortdescr)
   (count-transit     :initarg :count-transit   :initform 0                            :accessor count-transit)
   (count-total       :initarg :count-total     :initform 0                            :accessor count-total)
   (optgroups         :initarg :optgroups       :initform nil                          :accessor optgroups)))
:active


(defmacro new-classes.make-class (name class-fields)
  `(defclass ,name ()
     ,(mapcar #'(lambda (field)
                  `(,(getf field :name)
                     :initarg ,(getf field :initarg)
                     :initform ,(getf field :initform)
                     :accessor ,(getf field :accessor)))
              class-fields)))

(defmacro new-classes.make-view-method (name class-fields)
  `(defmethod new-classes.make-fields ((object ,name))
     ,(cons `list (mapcar #'(lambda (field)
                              `(list :value (format nil "~a" (,(getf field :name)  object))
                                     :name (format nil "~a" (quote ,(getf field :name)))
                                     :disabled ,(getf field :disabled)))
                          class-fields))))

(defmacro new-classes.make-edit-method (name class-fields)
  `(defmethod new-classes.edit-fields ((object ,name) post-data-plist)
     ,(cons `progn (mapcar #'(lambda (field)
                  (when (not (getf field :disabled))
                    `(setf (,(getf field :name) object)
                          (getf post-data-plist ,(intern (string-upcase (format nil "~a" (getf field :name))) :keyword)))))
              class-fields))))


(defun new-classes.make-class-and-methods (name list-fields)
  (eval `(new-classes.make-class ,name ,list-fields))
  (eval `(new-classes.make-view-method ,name ,list-fields))
  (eval `(new-classes.make-edit-method ,name ,list-fields)))

(macroexpand-1 '(new-classes.make-edit-method test
                 ((:name articul  :initarg :articul         :initform nil                          :accessor articul :disabled t)
                   (:name parent            :initarg :parent          :initform nil                          :accessor parent :disabled t)
                   (:name key               :initarg :key             :initform ""                           :accessor key :disabled t)
                   (:name name              :initarg :name            :initform ""                           :accessor name :disabled nil)
                   (:name realname          :initarg :realname        :initform ""                           :accessor realname :disalbed nil)
                   (:name price             :initarg :price           :initform 0                            :accessor price :disabled nil)
                   (:name siteprice         :initarg :siteprice       :initform 0                            :accessor siteprice :disabled nil)
                   (:name bonuscount        :initarg :bonuscount      :initform 0                            :accessor bonuscount :disabled nil)
                   (:name date-modified     :initarg :date-modified   :initform (get-universal-time)         :accessor date-modified :disabled nil)
                   (:name date-created       :initarg :date-created     :initform (get-universal-time)         :accessor date-created :disabled nil)
                   (:name active            :initarg :active          :initform t                            :accessor active :disabled nil)
                   (:name predzakaz         :initarg :predzakaz       :initform nil                          :accessor predzakaz :disabled nil)
                   (:name newbie            :initarg :newbie          :initform t                            :accessor newbie :disabled nil)
                   (:name sale              :initarg :sale            :initform t                            :accessor sale :disabled nil)
                   (:name descr             :initarg :descr           :initform ""                           :accessor descr :disabled nil)
                   (:name shortdescr        :initarg :shortdescr      :initform ""                           :accessor shortdescr :disabled nil)
                   (:name count-transit     :initarg :count-transit   :initform 0                            :accessor count-transit :disabled nil)
                   (:name count-total       :initarg :count-total     :initform 0                            :accessor count-total :disabled nil)
                   (:name optgroups         :initarg :optgroups       :initform nil                          :accessor optgroups :disabled t))))



